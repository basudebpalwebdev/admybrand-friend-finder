basePath: /
definitions:
  db.User:
    properties:
      address:
        type: string
      created_at:
        type: string
      description:
        type: string
      dob:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost:9999
info:
  contact:
    email: fiber@swagger.io
    name: API Support
  description: This is a sample swagger for Friend Finder
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Friend Finder API
  version: "1.0"
paths:
  /users:
    get:
      consumes:
      - application/json
      description: Get a paginated list of users
      parameters:
      - description: limit
        in: path
        name: limit
        type: integer
      - description: page_no
        in: path
        name: page_no
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/db.User'
      summary: List users
    post:
      consumes:
      - application/json
      description: Update a new user
      parameters:
      - description: Enter the id
        in: path
        name: id
        required: true
        type: string
      - description: Update description
        in: body
        name: description
        required: true
        schema:
          type: string
      - description: Update date of birth(yyyy-mm-dd)
        in: body
        name: dob
        required: true
        schema:
          type: string
      - description: Update address
        in: body
        name: address
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/db.User'
      summary: Update new users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Delete an user by ID
      parameters:
      - description: Please enter the id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            type: string
      summary: Delete an user by ID
    get:
      consumes:
      - application/json
      description: Get an user by ID
      parameters:
      - description: Please enter the id
        in: path
        name: id
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/db.User'
      summary: Get an user by ID
  /users/find/{username}:
    get:
      consumes:
      - application/json
      description: Find an user by Username
      parameters:
      - description: Please enter the username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Token:
              description: qwerty
              type: string
          schema:
            $ref: '#/definitions/db.User'
      summary: Find an user by Username
swagger: "2.0"
